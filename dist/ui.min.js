const F=(F,U)=>new Promise((s=>setTimeout((()=>s(U)),F)));function U(F,U){F&&null!=U&&("string"==typeof U||"number"==typeof U?F.innerHTML=U:Array.isArray(U)?(U=U.filter((F=>null!=F)),F.append(...U)):F.appendChild(U))}window.sleep=F;const s=new Set;function Q(){let F=null;do{F="ui-"+Math.random().toString(16).slice(2)}while(s.has(F)||document.querySelector("#"+F));return s.add(F),F}function l(F,U="div"){let s=document.createElement(U);return s.innerHTML=F,s.firstElementChild}var i=Object.freeze({__proto__:null,sleep:F,append:U,uuid:Q,htmlToElement:l,castHtmlElements:function(...F){return[...F]},shuffle:function(F){for(var U,s,Q=F.length;0!==Q;)s=Math.floor(Math.random()*Q),U=F[Q-=1],F[Q]=F[s],F[s]=U;return F},downloadJson:function(F,U){const s=document.createElement("a");s.href=URL.createObjectURL(new Blob([JSON.stringify(U,null,"\t")],{type:"text/json"})),s.download=F,s.click()},dynamicallyLoadScript:async function(F){return new Promise((U=>{var s=document.createElement("script");s.src=F,s.onreadystatechange=U,s.onload=U,document.head.appendChild(s)}))}});class B extends HTMLElement{constructor(F){super(),this.self=this,F&&(Array.isArray(F)?U(this,F):"string"==typeof F?this.innerHTML=F:this.append(F)),this.remove=this.remove.bind(this),this.intervals=[]}setInterval(F,U){this.intervals.push(setInterval((()=>{document.body.contains(this)?F():this.intervals.forEach((F=>clearInterval(F)))}),U))}css(F){let U=getComputedStyle(this).getPropertyValue(F);return U||(U=this.style.getPropertyValue(F)),U}cssNumber(F){let U=this.css(F),s=parseFloat(U);return U.endsWith("ms")?s:U.endsWith("s")?1e3*s:s}setCss(F,U){this.style.setProperty(F,U)}getCss(F){this.style.getPropertyValue(F)}get visible(){return 0==this.self.hidden}set visible(F){F?this.self.removeAttribute("hidden"):this.self.setAttribute("hidden","")}show(F=null){return this.self.attach(F),this.self.visible=!0,this}hide(){return this.self.visible=!1,this}remove(){return this.self.parentElement?.removeChild(this.self),this}close(){let F=this.parentElement;for(;null==F.close;)if(F=F.parentElement,null==F)return this;return F.close(),this}attach(F=null){return this.self.parentElement||(null==F&&(F=document.body),F.appendChild(this.self)),this}querySelector(F){return super.querySelector(F)}querySelectorAll(F){return super.querySelectorAll(F)}static castHtmlElements(...F){return[...F]}#dropTypeSet=new Set;droppable=!1;makeDraggable(F="element",U=null){this.draggable=!0,this.addEventListener("dragstart",(s=>{if(null==U){if(null==this.dataset.drag){let F="D_"+Math.floor(1e6*Math.random()).toString(16);this.dataset.drag=F}let U=`[data-drag="${this.dataset.drag}"]`;s.dataTransfer.setData(F,U)}else s.dataTransfer.setData(F,U)}))}makeDroppable(){this.droppable=!0;let F=F=>{let U=F.dataTransfer.types;for(let s of this.#dropTypeSet)if(U.includes(s))return void F.preventDefault()};this.addEventListener("dragenter",F),this.addEventListener("dragover",F)}onDragOver(F,U){F=F.toLowerCase(),this.droppable||this.makeDroppable(),this.#dropTypeSet.add(F),this.addEventListener("dragover",(s=>{let Q=s.dataTransfer.getData(F);""!=Q&&(Q.startsWith("[data-drag")&&(Q=document.querySelector(Q)),U(Q,s))}))}onDrop(F,U){F=F.toLowerCase(),this.droppable||this.makeDroppable(),this.#dropTypeSet.add(F),this.addEventListener("drop",(s=>{let Q=s.dataTransfer.getData(F);""!=Q&&(Q.startsWith("[data-drag")&&(Q=document.querySelector(Q)),U(Q,s))}))}}customElements.define("ui-basic",B);class V extends B{constructor(F,U,{icon:s="",style:Q="button",color:l=!1}={}){if(super(F),"string"==typeof U?(this.addEventListener("click",(F=>{F.ctrlKey?window.open(U):location.href=U})),this.addEventListener("auxclick",(F=>{1==F.button&&window.open(U)})),this.addEventListener("mousedown",(F=>{1==F.button&&F.preventDefault()}))):this.addEventListener("click",U),this.classList.add(Q),l&&this.classList.add(l),s=s||this.attributes.getNamedItem("icon")?.value){let U=document.createElement("i"),Q=s.trim().split(" ");Q.includes("fa")||Q.includes("fab")||Q.includes("fas")||U.classList.add("fa"),U.classList.add(...Q),this.prepend(U),""==F&&U.classList.add("icon-only")}}}customElements.define("ui-button",V);class L extends B{constructor(F,U){super('<input type="checkbox"/><div><span></span></div>'),this.value=F??"true"==this.attributes.getNamedItem("value")?.value,U&&this.querySelector("input").addEventListener("change",(()=>{U(this.value)}))}get value(){return this.querySelector("input").checked}set value(F){this.querySelector("input").checked=F}}customElements.define("ui-toggle",L);class c extends B{static STYLE={ROW:{parent:"table",wrap:"tr",label:"th",value:"td"},INLINE:{parent:null,wrap:"span",label:"label",value:"span"}};constructor(F){super(),this.template=F,this.changeListeners=[],this.onChange=this.onChange.bind(this),this.formStyle=c.STYLE.ROW,this.value={}}async build(F){this.value=F,this.changeListeners=[];let U=await this.jsonToHtml(this.template,F);return this.innerHTML="",this.append(...U),this.onChange(),this}async onChange(){let F=this.json();this.value=F;for(let U of this.changeListeners)await U(F);this.dispatchEvent(new Event("change"))}json(F=!1){return this._readValue(this,F)}_readValue(F,U=!1){let s={},Q=F.querySelectorAll("[data-key]");for(let F of Q){if(!U&&F.closest("[hidden]"))continue;let Q=s,l=F.dataset.key.split("."),i=l.pop();for(let F of l){if(Array.isArray(Q)){let F={};Q.push(F),Q=F}F.includes("[]")?(F=F.replace("[]",""),Q[F]=Q[F]??[]):Q[F]=Q[F]??{},Q=Q[F]}let B=F["checkbox"==F.type?"checked":"value"];"number"!=F.type&&"number"!=F.dataset.format||(B=parseFloat(B)),i.includes("[]")&&(i=i.replace("[]",""),Q[i]=Q[i]??[],Q=Q[i],i=null),Array.isArray(Q)&&(null===i?i=Q.length:(0!=Q.length&&null==Q[Q.length-1][i]||Q.push({}),Q=Q[Q.length-1])),Q[i]=B}return s}async jsonToHtml(F,U,s="",Q={style:this.formStyle}){let l=[];Array.isArray(F)||(F=[F]);for(let i of F){"string"==typeof i&&(-1==i.indexOf(":")?i={key:null,type:i}:(i={key:i.split(":")[0],type:i.split(":")[1]},null==U&&(U={})));let F=(i.key?U[i.key]:U)??i.default;l.push(await this.oneItem(i,F,i.key?(s?s+".":"")+i.key:s,Q))}if(Q.style?.parent){let F=document.createElement(Q.style?.parent);return F.append(...l),[F]}return l}_readJsonWithKey(F,U){try{let s=U.split(".");for(let U of s){if(null==F)return null;U.endsWith("[]")?(U=U.substring(0,U.length-2),F=(F=F[U])?.length>0?F[0]:null):F=F[U]}return F}catch(F){return null}}async oneItem(F,U,s,{style:i=c.STYLE.ROW}={}){let B=document.createElement(i.wrap);B.dataset.element=s;let L=async U=>{let L;if(F.key){if(L=document.createElement(i.label),L.innerHTML=F.name??F.key,F.hint){let U=document.createElement("div");U.innerHTML=F.hint,L.append(U)}B.append(L)}let x=document.createElement(i.value);if(x.classList.add("value"),B.append(x),"string"==typeof F.type){let i="";switch(F.type){case"header":L.setAttribute("colspan","2"),L.classList.add("header"),x.remove();break;case"description":x.setAttribute("colspan","2"),x.classList.add("description"),x.innerHTML=F.key,L.remove();break;case"hr":x.setAttribute("colspan","2"),x.innerHTML="<hr/>";break;case"checkbox":i+=`<input data-key="${s}" type="checkbox" ${U?"checked":""}/>`,x.innerHTML=i;break;case"toggle":i+=`<ui-toggle data-key="${s}" value="${U??!1}"></ui-toggle>`,x.innerHTML=i;break;case"dropdown":case"select":case"list":i+=`<select data-key="${s}" data-format="${F.format}">`;let B=F.options;Array.isArray(B)||(B=await B(this.value)),i+=B.map((F=>`<option \n\t\t\t\t\t\t\t\t${U==(F.value?F.value:F)?"selected":""}\n\t\t\t\t\t\t\t\tvalue="${F.value?F.value:F}">${F.name?F.name:F}</option>`)).join(""),i+="</select>",x.innerHTML=i;break;case"text":i+=`<textarea data-key="${s}">${U??""}</textarea>`,x.innerHTML=i;break;case"string":let t=l(`<input data-key="${s}" type="text" placeholder="${F.placeholder??""}"/>`);if(t.value=U??null,F.disabled&&t.setAttribute("disabled",""),F.options){let s=F.options;Array.isArray(s)||(s=await s(this.value));let l=Q(),i=_.html(`<datalist id="${l}">`+s.map((F=>`<option \n\t\t\t\t\t\t\t\t\t\t${U==(F.value?F.value:F)?"selected":""}\n\t\t\t\t\t\t\t\t\t\tvalue="${F.value?F.value:F}">${F.name?F.name:F}</option>`)).join("")+"</datalist>");x.append(i),t.addEventListener("focus",(()=>t.value="")),t.setAttribute("list",l)}x.append(t);break;case"number":i+=`<input data-key="${s}" type="number" value="${U??""}"/>`,x.innerHTML=i;break;case"object":case"compound":x.append(...await this.jsonToHtml(F.children,U??{},s));break;case"array":s+="[]";let d=F.style??"INLINE",Z=c.STYLE[d],b=document.createElement("div");b.classList.add("array"),b.classList.add(d);let X=new V("Add",null,{icon:"fa-plus"}),R=async U=>{let Q=document.createElement("span");Q.classList.add("item"),Q.append(...await this.jsonToHtml(F.children,U,s,{style:Z})),Q.append(new V("",(()=>{Q.remove(),this.onChange()}),{icon:"fa-trash",style:"text",color:"error-color"}));let l=Q.querySelectorAll("[data-key]");for(let F of l)F.addEventListener("change",this.onChange);b.append(Q)};if(X.addEventListener("click",(async()=>{let U=await R(Array.isArray(F.children)?{}:null);return this.onChange(),U})),Array.isArray(U))for(let F of U)await R(F);x.append(b),x.append(X)}}else if("function"==typeof F.type){let Q=F.type;if(Q.prototype&&Q.prototype.constructor.name){let Q=new F.type(U,s,B);Q.dataset.key=s,x.append(Q)}else{let Q=F.type(U,s,B);Q.dataset.key=s,x.append(Q)}}let t=B.querySelectorAll("[data-key]");for(let F of t)F.addEventListener("change",(F=>{F.stopPropagation(),this.onChange()}))};if(await L(U),F.hidden&&this.changeListeners.push((U=>{B.hidden=F.hidden(U,B)})),F.redraw){let U=Array.isArray(F.redraw)?F.redraw:[F.redraw];for(let F of U){let U={},Q=async Q=>{let l=this._readJsonWithKey(Q,F),i=JSON.stringify(l);if(U!==i){let F=this._readValue(B),Q=this._readJsonWithKey(F,s);B.innerHTML="",await L(Q),U=i}};this.changeListeners.push(Q)}}return B}}customElements.define("ui-form",c);class x extends B{constructor(F="",{title:s="",clazz:Q="",buttons:l="",header:i=!1,footer:B=!1}={}){super(),this.setAttribute("ui-panel",""),this.innerHTML.trim()||(this.innerHTML=`\n\t\t\t\t${i||s?`<header>${s}</header>`:""}\n\t\t\t\t<content></content>\n\t\t\t\t${B||l?`<footer>${l}</footer>`:""}\n\t\t\t`,U(this.content,F)),Q&&this.classList.add(Q)}get content(){return this.querySelector("content")}append(...F){U(this.content,F)}header(...F){U(this.querySelector("header"),F)}footer(...F){U(this.querySelector("footer"),F)}}customElements.define("ui-panel",x);class t extends B{constructor(F,{dismissable:U=!1}={}){super(F),U&&this.addEventListener("mousedown",this.remove)}}customElements.define("ui-splash",t);class d extends t{constructor(F,{title:U="",clazz:s="",buttons:Q="",dismissable:l=!0,header:i=!1,footer:B=!1}={}){super("",{dismissable:l}),this.setAttribute("ui-modal","");let V=new x(F,{title:U,clazz:s,buttons:Q,header:i,footer:B});V.addEventListener("mousedown",(()=>event.stopPropagation())),V.self=this,this.appendChild(V)}get panel(){return this.querySelector("ui-panel")}close(){return this.self.remove(),this}}customElements.define("ui-modal",d);class Z extends B{constructor(){super(),this.attach()}}function b(F,U=!1){return Array.isArray(F)&&!0===U?F.map(b).join(" "):"object"==typeof F?JSON.stringify(F,null,"\t"):""+F}customElements.define("ui-toaster",Z);class X extends B{constructor(F,{level:U="info"}={}){super(b(F,!0));let s=document.createElement("i"),Q={debug:"fa-bug",info:"fa-info-circle",warn:"fa-exclamation-circle",error:"fa-exclamation-triangle",success:"fa-check-circle"}[U];s.classList.add("fa",Q),this.prepend(s),document.querySelector("ui-toaster")||new Z;let l=document.querySelector("ui-toaster");this.classList.add(U),l.prepend(this);document.querySelectorAll("ui-toast").length;setTimeout((()=>this.style.marginTop="10px"),10),setTimeout((()=>{this.style.marginTop="-50px",this.style.opacity="0"}),4800),setTimeout((()=>this.remove()),5e3)}}function R(...F){new X(F,{level:"info"})}function e(...F){new X(F,{level:"warn"})}function S(...F){new X(F,{level:"error"})}customElements.define("ui-toast",X);var W=Object.freeze({__proto__:null,popupForm:async function(F,{value:U={},title:s=null,submitText:Q="Submit",wrapper:l=null}={}){return new Promise((i=>{let B=new c(F);B.build(U).then((()=>{let F=B;l&&(F=l(F));let U=new d(F,{title:s,buttons:"<ui-cancel></ui-cancel><ui-spacer></ui-spacer>"});U.close=()=>{U.self.remove(),i(null)},U.panel.footer(new V(Q,(()=>{U.self.remove(),i(B.json())}))),U.show()}))}))},info:R,warn:e,error:S});class m extends B{constructor(F,{icon:U=""}={}){if(super(F),U=U||this.attributes.getNamedItem("icon")?.value){let F=document.createElement("i"),s=U.trim().split(" ");s.includes("fa")||s.includes("fab")||s.includes("fas")||F.classList.add("fa"),F.classList.add(...s),this.prepend(F)}}}customElements.define("ui-badge",m);class n extends B{constructor(){super(),this.innerHTML=this.innerHTML||"Cancel",this.addEventListener("click",this.close.bind(this))}}customElements.define("ui-cancel",n);class a extends B{constructor(F){super(),this.setAttribute("ui-card","");let U=F||this.innerHTML;this.innerHTML='<div class="card"></div>',this.setContent(U)}setContent(F){"string"==typeof F?this.querySelector(".card").innerHTML=F??"":this.querySelector(".card").append(F)}async flip(){this.flipped=!this.flipped;let F=this.cssNumber("--duration");return new Promise((U=>setTimeout(U,F)))}get flipped(){return null==this.getAttribute("flipped")}set flipped(F){F?this.removeAttribute("flipped"):this.setAttribute("flipped","")}}function I(F,U,s){var Q=void 0===U?null:U,l=function(F,U){var s=atob(F);if(U){for(var Q=new Uint8Array(s.length),l=0,i=s.length;l<i;++l)Q[l]=s.charCodeAt(l);return String.fromCharCode.apply(null,new Uint16Array(Q.buffer))}return s}(F,void 0!==s&&s),i=l.indexOf("\n",10)+1,B=l.substring(i)+(Q?"//# sourceMappingURL="+Q:""),V=new Blob([B],{type:"application/javascript"});return URL.createObjectURL(V)}customElements.define("ui-card",a);var h,u,G,y,J=(h="",u="data:application/json;charset=utf-8;base64,",G=!1,function(F){return y=y||I(h,u,G),new Worker(y,F)});class p extends B{constructor(F){super(F),this.setContent(F||this.innerHTML)}preprocess(F){return F}setContent(F){F=this.preprocess(F);let U=new J;U.onmessage=F=>{this.classList.add("hljs"),this.innerHTML=F.data},U.postMessage(F)}}customElements.define("ui-code",p);class N extends B{target;items=[];#attachments=new WeakMap;constructor(F=null){super("<section></section>"),this.hide=this.hide.bind(this),this.hide();for(let F of["click","contextmenu"])this.addEventListener(F,this.hide),this.firstElementChild.addEventListener(F,(F=>{F.stopPropagation()}));F&&this.for(F)}for(F){let U=U=>{U.preventDefault(),this.renderMenu(F,U.pageX,U.pageY)};return F.addEventListener("contextmenu",U),F.setAttribute("context-menu",""),this.#attachments.set(F,U),this}renderMenu(F,U,s){this.target=F;let Q=window.innerWidth,l=window.innerHeight,i=U<.75*Q,B=s<.5*l;this.style.left=i?U+"px":null,this.style.right=i?null:Q-U+"px",this.style.top=B?s+"px":null,this.style.bottom=B?null:l-s+"px";for(let U of this.items)U.element.hidden=U.hide&&U.hide(F);this.show()}detach(F){let U=this.#attachments.get(F);U&&(F.removeAttribute("context-menu",""),F.removeEventListener("contextmenu",U))}addItem(F,U,s=!1){let Q=l(`<div>${F}</div>`);return this.items.push({element:Q,hide:s}),Q.addEventListener("click",(()=>{U(this.target),this.hide()})),this.firstElementChild.appendChild(Q),this}addBreak(){return this.firstElementChild.appendChild(l("<hr/>")),this}clearMenuItems(){this.items=[],this.firstElementChild.innerHTML=""}}customElements.define("ui-context",N);class E extends B{#columns=0;#rows=0;constructor({padding:F,columnGap:U,rowGap:s}={}){super(),this.setAttribute("ui-grid",""),void 0!==F&&this.setCss("--padding",F),void 0!==s&&this.setCss("row-gap",s),void 0!==U&&this.setCss("column-gap",U)}get columns(){return this.#columns}set columns(F){this.#columns=F,this.setCss("--columns",F)}get rows(){return this.#rows}set rows(F){this.#columns=F,this.setCss("--rows",F)}put(F,U,s,Q=1,l=1){this.rows<U+l-1&&(this.rows=U+l-1),this.columns<s+Q-1&&(this.columns=s+Q-1),Array.isArray(F)&&((F=new _.BasicElement(F)).style.display="flex"),F.style.setProperty("grid-area",`${U} / ${s} / span ${l} / span ${Q}`),this.append(F)}}customElements.define("ui-grid",E);class T extends B{constructor(F,U,s){super(),this.obj=F,this.key=U,this.setAttribute("ui-input","")}get value(){return Reflect.get(this.obj,this.key)}set value(F){Reflect.set(this.obj,this.key,F)}label(F){return new r(this,F,{wrapped:!0})}}class Y extends HTMLInputElement{constructor(F,U,s){super(),this.setAttribute("ui-input","")}label(F){return new r(this,F,{wrapped:!0})}}class o extends Y{constructor(F,U,{callback:s=null,size:Q=null,color:l=null,placeholder:i=null}={}){super(),this.type="text",this.value=Reflect.get(F,U)??null,Q&&(this.style.width=24*Q+"px"),l&&this.style.setProperty("--color",l),i&&this.setAttribute("placeholder",i),this.addEventListener("change",(()=>{let Q=this.value;Reflect.set(F,U,Q),s&&s(Q)}))}}customElements.define("ui-stringinput",o,{extends:"input"});class C extends Y{constructor(F,U,{callback:s=null,size:Q=null,color:l=null,placeholder:i=null}={}){super(),this.type="number",this.value=Reflect.get(F,U),Q&&(this.style.width=24*Q+"px"),l&&this.style.setProperty("--color",l),i&&this.setAttribute("placeholder",i),this.addEventListener("change",(()=>{let Q=parseFloat(this.value);Reflect.set(F,U,Q),s&&s(Q)}))}}customElements.define("ui-numberinput",C,{extends:"input"});class k extends HTMLSelectElement{_value=null;constructor(F,U,{options:s=[],callback:Q=null,size:l=null,color:i=null,placeholder:B=null}={}){super(F,U),this.obj=F,this.key=U,this.setAttribute("ui-input",""),l&&(this.style.width=24*l+"px"),i&&this.style.setProperty("--color",i),B&&this.setAttribute("placeholder",B),this.addEventListener("change",(()=>{let F=this.value;this.setValue(F),Q&&Q(F)})),this.renderOptions(s)}getValue(){return Reflect.get(this.obj,this.key)??null}setValue(F){Reflect.set(this.obj,this.key,F)}async renderOptions(F){"function"==typeof F&&(F=await F());let U=this.getValue();for(let s of F){let F=document.createElement("option");s==U&&F.setAttribute("selected",""),F.innerText=s,this.append(F)}}}customElements.define("ui-selectinput",k,{extends:"select"});class H extends T{constructor(F,U){super(F,U);let s=document.createElement("textarea");s.onkeydown=function(F){if("Tab"==F.key){F.preventDefault();let U=this.selectionStart;this.value=this.value.substring(0,this.selectionStart)+"\t"+this.value.substring(this.selectionEnd),this.selectionEnd=U+1}};let Q=()=>{s.style.height="1px",s.style.height=s.scrollHeight+"px"};s.onkeyup=Q,s.addEventListener("change",(()=>{try{let F=JSON.parse(s.value);this.value=F,this.classList.toggle("error",!1)}catch(F){this.classList.toggle("error",!0)}})),s.value=JSON.stringify(this.value??"",null,"\t"),this.append(s),setTimeout(Q,10)}}customElements.define("ui-json-input",H);class r extends HTMLLabelElement{input;constructor(F,U,{wrapped:s=!1}={}){if(super(),s)this.innerHTML=`<span class="label">${U}</span>`,this.append(F);else{let s=F.id;null==s&&(s="ui-"+Math.random().toString(16).slice(2),F.id=s),this.setAttribute("for",s),this.innerText=U}}get value(){return this.input.value}set value(F){this.input.value=F}}customElements.define("ui-label",r,{extends:"label"});class w extends r{constructor(F,U,s,Q={}){super(new s(F,U,Q),Q.name??U,{wrapped:!0})}}customElements.define("ui-labelledinput",w,{extends:"label"});class K extends E{json;constructor(F,U,s){super(),this.json=U,this.build(F,U)}build(F,U){console.log("build",F,U);for(let s of Object.keys(F)){let Q=F[s];if("function"==typeof Q)this.append(new w(U,s,Q));else if(Array.isArray(Q))this.append(new w(U,s,Q[0],Q[1]));else{let F=Reflect.get(U,s);null==F&&(F={},Reflect.set(U,s,F)),this.build(Q,F)}}}get value(){return this.json}}customElements.define("ui-form2",K);class z{path;pathVariables=[];func;constructor(F,U){for(;F.includes("{");){let U=F.substring(F.indexOf("{"),F.indexOf("}")+1);F=F.replace(U,"([^/]*)"),this.pathVariables.push(z.v(U.substring(1,U.length-1)))}this.path=new RegExp(F),this.func=U}static v(F){let[U,s]=F.split(":");return{name:U,set:(F,Q)=>{if(Q){switch(s){case"number":Q=parseFloat(Q);break;case"boolean":Q="true"==Q.toLowerCase();break;case"json":Q=JSON.parse(Q)}F[U]=Q}}}}async handle(F,U){let s=F.match(this.path);if(!s||s[0].length!=F.length)return!1;let Q={};s.shift();for(let F of this.pathVariables)F.set(Q,s.shift());return await this.func(Q)}}class M extends B{key=null;hash=null;depth=0;eventlistener;handlers=[];position=[0,0];static DIRECTION={NONE:0,LEFT:1,RIGHT:2,BOTTOM:3,TOP:4,RANDOM:100};static Handler=z;constructor(F=null){super(),this.key=F,this.eventlistener=()=>this.hashChange(),window.addEventListener("hashchange",this.eventlistener)}remove(){return super.remove(),window.removeEventListener("hashchange",this.eventlistener),this}get value(){return this.hash}handler(F,U){return this.handlers.push(new z(F,U)),this}addHandler(F){this.handlers.push(F)}set(F){let U=window.location.hash.substring(1).split("|").filter((F=>""!=F)).map((F=>F.includes("=")?F.split("=",2):[null,F])),s=U.find((F=>F[0]==this.key));null==s&&(s=[this.key,null],U.push(s)),s[1]=F,window.location.hash=U.map((F=>F[0]?F.join("="):F[1])).join("|")}async hashChange(){let F=window.location.hash.substring(1).split("|").map((F=>F.includes("=")?F.split("=",2):[null,F])).find((F=>F[0]==this.key));null==F&&(F=[this.key,""]);let U=F[1],s=this.hash;if(this.hash=U,this.hash!=s)for(let F of this.handlers){let Q=await F.handle(U,s);if(Q){Array.isArray(Q)?await this.swapContent(Q[0],Q[1]):await this.swapContent(Q,null);break}}}async swapContent(s,Q=M.DIRECTION.RIGHT){let l,i,B=document.createElement("content");if(U(B,s),null==this.firstElementChild)return this.appendChild(B);if(null==Q)return this.firstElementChild.remove(),void this.appendChild(B);if(Q==M.DIRECTION.RANDOM){let F=[M.DIRECTION.RIGHT,M.DIRECTION.LEFT,M.DIRECTION.TOP,M.DIRECTION.BOTTOM];Q=F[Math.floor(Math.random()*F.length)]}if(Array.isArray(Q)){console.log(this.position,Q);let F=Q;Q=this.position[0]!=Q[0]?this.position[0]>Q[0]?M.DIRECTION.LEFT:M.DIRECTION.RIGHT:this.position[1]!=Q[1]?this.position[1]<Q[1]?M.DIRECTION.BOTTOM:M.DIRECTION.TOP:M.DIRECTION.RIGHT,this.position=F}switch(Q){case M.DIRECTION.RIGHT:[l,i]=["right","left"];break;case M.DIRECTION.LEFT:[l,i]=["left","right"];break;case M.DIRECTION.TOP:[l,i]=["top","bottom"];break;case M.DIRECTION.BOTTOM:[l,i]=["bottom","top"]}let V=this.cssNumber("--timing");B.classList.add(l),this.appendChild(B),F(50).then((()=>{B.classList.remove(l),this.firstElementChild.classList.add(i),setTimeout((()=>this.firstElementChild.remove()),V)}))}}customElements.define("ui-hash",M);class j extends p{constructor(F){super(F)}preprocess(F){return"object"==typeof F?JSON.stringify(F,null,"\t"):JSON.stringify(JSON.parse(F),null,"\t")}}customElements.define("ui-json",j);let v=0;class O extends B{elementMap=new WeakMap;static ASC=!0;static DESC=!1;dirty=!0;_sort=null;attrs={};static ITEMS_COLUMNS_KEY="--item-columns";static ITEMS_PER_PAGE_KEY="--items-per-page";constructor(F,U={}){super(),this.setAttribute("ui-list",""),this.innerHTML=this.listLayout,this.listBody=this.querySelector(".list"),this._sort=null,this._data=[],this.display=[],this.lookup={},this._filterFunc=null,this._itemDisplayFunc=F,this.pageNumber=0,U.itemColumns&&(this.itemColumns=U.itemColumns),U.itemsPerPage&&(this.itemsPerPage=U.itemsPerPage)}set itemColumns(F){this.setCss(O.ITEMS_COLUMNS_KEY,F)}get itemsPerPage(){return this.cssNumber(O.ITEMS_PER_PAGE_KEY)||24}set itemsPerPage(F){this.setCss(O.ITEMS_PER_PAGE_KEY,F)}get listLayout(){return'\n\t\x3c!-- pagination --\x3e\n\t<header>\n\t\t<span><span class="sort"></span></span>\n\t\t<ui-spacer></ui-spacer>\n\t\t<span class="paging top"></span>\n\t</header>\n\n\t<content class="list">\n\t</content>\n\n\t\x3c!-- pagination --\x3e\n\t<footer>\n\t\t<ui-spacer></ui-spacer>\n\t\t<div class="paging bottom"></div>\n\t</footer>'}set data(F){this._data=F;for(let F of this._data)null==F.__id&&(F.__id=F.id?F.id:""+v++);this.dirty=!0}get data(){return this._data}addAttribute(F,U=(U=>U[F]),s=U,Q=null){return this.attrs[F]={id:v++,name:F,width:Q,value:"string"==typeof U?F=>F[U]:U,displayFunc:"string"==typeof s?F=>F[s]:s},this.dirty=!0,this}_filtered(F){return null==this._filterFunc||this._filterFunc(F)}filter(F=this._filterFunc){this._filterFunc=F,this.dirty=!0,this.page(0)}sortDisplay(){let F=this.querySelector(".sort"),U=document.createElement("select");U.innerHTML=Object.values(this.attrs).map((F=>F.value?`<option value="${F.name}:asc" >▲ ${F.name}</option>\n\t\t\t<option value="${F.name}:desc">▼ ${F.name}</option>`:"")).join(""),U.value=this._sort?`${this._sort.attr.name}:${this._sort.asc?"asc":"desc"}`:null,U.onchange=()=>{let F=U.value.split(":");this.sort(F[0],"asc"==F[1])},F.innerHTML="",F.appendChild(U),0==Object.values(this.attrs).length&&(F.style.display="none")}async render(F=!1){F&&(this.dirty=!0),this.sortDisplay(),await this.page()}async getItemElement(F){return this.elementMap.has(F)||this.elementMap.set(F,await this.renderItem(F)),this.elementMap.get(F)}async renderItem(F){return await this._itemDisplayFunc(F)}async sort(F=this._sort?.attr,U=!this._sort?.asc){this.dirty=!0;let s="string"==typeof F?this.attrs[F]:F;this._sort=null==F?null:{attr:s,asc:U},0!=this.data.length&&await this.render()}async page(F=this.pageNumber){this.dirty&&(this.display=[...this.data],this.display=this.display.filter((F=>this._filtered(F))),this._sort&&(this.display=this.display.sort(((F,U)=>{let s=F?this._sort.attr.value(F):null,Q=U?this._sort.attr.value(U):null;if(s==Q)return 0;let l=this._sort.asc?1:-1;return null==Q?l:null==s?-l:l*(""+s).localeCompare(""+Q,"en",{sensitivity:"base",ignorePunctuation:"true",numeric:!0})}))),this.dirty=!1,this.pageNumber=0);let U=this.display.length,s=Math.ceil(U/this.itemsPerPage),Q=s>1;if(this.pageNumber=isNaN(F)?0:Math.max(Math.min(F,s-1),0),Q){let F=this.pagingMarkup(this.pageNumber,s,U);this.querySelector(".paging.top").innerHTML=F,this.querySelector(".paging.bottom").innerHTML=F,B.castHtmlElements(...this.querySelectorAll("[data-page]")).forEach((F=>F.addEventListener("click",(()=>{this.page(parseInt(F.dataset.page))}))))}else this.querySelector(".paging.top").innerHTML="",this.querySelector(".paging.bottom").innerHTML="";this.listBody.innerHTML="";for(let F=this.pageNumber*this.itemsPerPage;F<(this.pageNumber+1)*this.itemsPerPage&&F<U;F++){let U=this.display[F],s=await this.getItemElement(U);s instanceof B?s.attach(this.listBody):this.listBody.appendChild(s)}}pagingMarkup(F,U,s){let Q="";Q+=`${s} items`,Q+=`<ui-button data-page="0" class="near ${0==F?"active":""}">1</ui-button>`;let l=F-1,i=F+1+1;l<1&&(i+=1-l,l=1),i>U-1&&(l-=i-U+1,i=U-1,l=Math.max(1,l)),l>1&&(Q+="<span>...</span>");for(let U=l;U<i;U++)Q+=`<ui-button data-page="${U}" class="${U==F?"active":""}">${U+1}</ui-button>`;return i<U-1&&(Q+="<span>...</span>"),Q+=`<ui-button data-page="${U-1}" class="near ${F==U-1?"active":""}">${U}</ui-button>`,Q}}customElements.define("ui-list",O);class f extends O{constructor(F={}){super((async F=>{let s=document.createElement("tr");s.dataset.tableId=F.__id;for(let Q of Object.values(this.attrs)){let l=document.createElement("td");U(l,await Q.displayFunc(F)),s.append(l)}return s}),F),this.setAttribute("ui-table","")}get listLayout(){return'<table>\n<thead>\n\t\x3c!-- pagination --\x3e\n\t<tr><td class="paging top" colspan="100"></td></tr>\n\n\t<tr class="headers"></tr>\n\t\x3c!-- filters --\x3e\n</thead>\n<tbody class="list">\n</tbody>\n<tfoot>\n\t\x3c!-- pagination --\x3e\n\t<tr><td class="paging bottom" colspan="100"></td></tr>\n</tfoot>\n</table>'}sortDisplay(){let F=this.querySelector("thead tr.headers"),U=Object.values(this.attrs),s="";for(let F of U)s+=`<th data-table-id="${F.id}" ${this.attrs[F.name].value?`data-sort="${F.name}"`:""} style="${F.width?`width:${F.width}`:""}">${F.name}</th>`;F.innerHTML=s,F.querySelectorAll("th").forEach((F=>{F.dataset.sort&&(F.onclick=U=>{this.sort(F.dataset.sort)})})),this._sort&&this.querySelector(`thead tr.headers th[data-table-id='${this._sort.attr.id}']`).classList.add(this._sort.asc?"asc":"desc")}}customElements.define("ui-table",f);class g extends B{constructor(){super()}}customElements.define("ui-spacer",g);class P extends B{constructor(){super();let F=this.attributes.getNamedItem("size")?.value||"1em";this.style.setProperty("--size",F)}}customElements.define("ui-spinner",P);class D extends B{#view={parent:null,x:0,y:0,zoom:1,get width(){return this.parent.element.width/this.zoom},get height(){return this.parent.element.height/this.zoom}};attachments=[];constructor({flipY:F=!1}={}){super(),this.#view.parent=this,this.canvas=document.createElement("canvas"),this.append(this.canvas)}addAttachment(F,U=!0){this.attachments.push(F),this.append(F),U&&this.updateAttachments()}removeAttachment(F,U=!0){this.attachments=this.attachments.filter((U=>U!=F)),this.removeChild(F),U&&this.updateAttachments()}center(F,U){this.setCenter(F,U)}setCenter(F,U){this.#view.x=F-this.#view.width/2,this.#view.y=U-this.#view.height/2}getCenter(){return this.toView(this.#view.width/2,this.#view.height/2)}zoom(F,U,s){this.setZoom(F,U,s)}setZoom(F,U=null,s=null){if(null==U){let F=this.getCenter();U=F.x,s=F.y}let Q=this.toScreen(U,s);this.#view.zoom=F;let l=this.toScreen(U,s),i=l.x-Q.x,B=l.y-Q.y;this.panScreen(i,B)}pan(F,U){this.panScreen(F,U)}panScreen(F,U){this.#view.x+=F/this.#view.zoom,this.#view.y+=U/this.#view.zoom}toView(F,U){let s=this.#view,Q=this.element,l={x:(F-Q.x)/s.zoom+s.x,y:(U-Q.y)/s.zoom+s.y};return l.out=l.x<s.x||l.x>s.x+s.width||l.y<s.y||l.y>s.y+s.height,l}toScreen(F,U){let s=this.#view;return{x:(F-s.x)*s.zoom,y:(U-s.y)*s.zoom}}get element(){return this.getBoundingClientRect()}#lastV;grid=[{step:1,offset:1,color:"#7772"},{step:6,offset:6,color:"#7772"},{step:12,offset:0,color:"#7774"},{step:1/0,offset:0,color:"#999"}];render(){let F=this.#view,U=JSON.stringify({x:F.x,y:F.y,w:F.width,h:F.height,z:F.zoom});if(null!=this.#lastV&&this.#lastV==U)return this.#lastV=U,void this.updateAttachments();this.#lastV=U;let s=this.element;this.canvas.width==s.width&&this.canvas.height==s.height||(this.canvas.width=s.width,this.canvas.height=s.height);let Q=this.canvas.getContext("2d");Q.resetTransform(),Q.clearRect(0,0,this.canvas.width,this.canvas.height);let l=-F.x*F.zoom,i=-F.y*F.zoom,B=F.width*F.zoom,V=F.height*F.zoom;Q.lineWidth=1;for(let U of this.grid)if(!(F.zoom*U.step<10)){Q.beginPath(),Q.strokeStyle=U.color;for(let s=U.offset??0;s<1e3*U.step;s+=U.step){let U=s*F.zoom;U+i>0&&U+i<V&&(Q.moveTo(0,U+i),Q.lineTo(B,U+i)),-U+i>0&&-U+i<V&&(Q.moveTo(0,-U+i),Q.lineTo(B,-U+i)),U+l>0&&U+l<B&&(Q.moveTo(U+l,0),Q.lineTo(U+l,V)),-U+l>0&&-U+l<B&&(Q.moveTo(-U+l,0),Q.lineTo(-U+l,V))}Q.stroke()}this.updateAttachments()}updateAttachments(){let F=this.#view;for(let U of this.attachments){let s=U.scalar??1,Q=(U.x??0)*s-F.x,l=(U.y??0)*s-F.y,i=`translate(${Q*F.zoom}px, ${l*F.zoom}px) scale(${F.zoom*s})`;U.style.transform=i}}bindMouse(){let F=null;this.addEventListener("contextmenu",(F=>{F.preventDefault()})),this.addEventListener("wheel",(F=>{let U=this.toView(F.x,F.y),s=Math.exp((480*Math.log(this.#view.zoom)-F.deltaY)/480);this.setZoom(s,U.x,U.y),this.render()})),document.addEventListener("mousedown",(U=>{1==U.button&&(F=[U.x,U.y]),U.button,U.button})),document.addEventListener("mousemove",(U=>{if(F){let s=[U.x,U.y];this.panScreen(F[0]-s[0],F[1]-s[1]),F=s,this.render()}})),document.addEventListener("mouseup",(U=>{if(1==U.button){let s=[U.x,U.y];this.panScreen(F[0]-s[0],F[1]-s[1]),F=null,this.render()}U.button,U.button}))}}customElements.define("ui-viewport",D);let A=[import.meta.url+"/../ui.css","https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,wght@0,200;0,300;0,400;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,600;1,700;1,800;1,900&display=swap","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.css"],q=document.createElement("head");q.innerHTML=A.map((F=>`<link href="${F}" rel="stylesheet">`)).join(""),document.head.prepend(...q.childNodes);const _={BasicElement:B,Badge:m,Button:V,Cancel:n,Card:a,Code:p,ContextMenu:N,Form:c,Form2:K,Grid:E,HashManager:M,InputLabel:r,Json:j,JsonInput:H,LabelledInput:w,List:O,Table:f,Modal:d,NumberInput:C,Panel:x,SelectInput:k,Spacer:g,Spinner:P,Splash:t,StringInput:o,Table:f,Toast:X,Toggle:L,Viewport:D,info:R,warn:e,error:S,html:l,uuid:Q,utils:i,factory:W};window.UI=_;let $=l;export default _;export{m as Badge,B as BasicElement,V as Button,n as Cancel,a as Card,p as Code,N as ContextMenu,c as Form,E as Grid,M as HashManager,r as InputLabel,j as Json,w as LabelledInput,O as List,d as Modal,C as NumberInput,x as Panel,g as Spacer,P as Spinner,t as Splash,o as StringInput,f as Table,X as Toast,L as Toggle,D as Viewport,$ as createElement,W as factory,i as utils};
